// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


#include "stdafx.h"
#include "brgamevideoclient.h"

/////////////////////////////////////////////////////////////////////////////
// CBRGameVideoClient

IMPLEMENT_DYNCREATE(CBRGameVideoClient, CWnd)

/////////////////////////////////////////////////////////////////////////////
// CBRGameVideoClient properties

/////////////////////////////////////////////////////////////////////////////
// CBRGameVideoClient operations

void CBRGameVideoClient::ActiveVideoClient(LPCTSTR authCode, short codeEncType)
{
	static BYTE parms[] =
		VTS_BSTR VTS_I2;
	InvokeHelper(0x1, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 authCode, codeEncType);
}

void CBRGameVideoClient::StartVideoClient(LPCTSTR videoserveripaddr, short videoserverport)
{
	static BYTE parms[] =
		VTS_BSTR VTS_I2;
	InvokeHelper(0x2, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 videoserveripaddr, videoserverport);
}

void CBRGameVideoClient::Release()
{
	InvokeHelper(0x3, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CBRGameVideoClient::RegisterUser(short isVisitor, long userid, LPCTSTR username, LPCTSTR password, short passEncType)
{
	static BYTE parms[] =
		VTS_I2 VTS_I4 VTS_BSTR VTS_BSTR VTS_I2;
	InvokeHelper(0x4, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 isVisitor, userid, username, password, passEncType);
}

void CBRGameVideoClient::UnRegisterUser(long userid)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x5, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 userid);
}

void CBRGameVideoClient::EnterRoom(long roomid, LPCTSTR roompass, short passEncType)
{
	static BYTE parms[] =
		VTS_I4 VTS_BSTR VTS_I2;
	InvokeHelper(0x6, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 roomid, roompass, passEncType);
}

void CBRGameVideoClient::LeaveRoom(long roomid)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x7, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 roomid);
}

void CBRGameVideoClient::SendVideoControl(short bSend)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x8, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 bSend);
}

short CBRGameVideoClient::GetSendVideoState()
{
	short result;
	InvokeHelper(0x9, DISPATCH_METHOD, VT_I2, (void*)&result, NULL);
	return result;
}

short CBRGameVideoClient::GetCameraState(long userid)
{
	short result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xa, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		userid);
	return result;
}

void CBRGameVideoClient::UserCameraControl(long userid, short bOpen, long* phWnd, short left, short top, short right, short bottom)
{
	static BYTE parms[] =
		VTS_I4 VTS_I2 VTS_PI4 VTS_I2 VTS_I2 VTS_I2 VTS_I2;
	InvokeHelper(0xb, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 userid, bOpen, phWnd, left, top, right, bottom);
}

short CBRGameVideoClient::GetSpeakState(long userid)
{
	short result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xc, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		userid);
	return result;
}

void CBRGameVideoClient::UserSpeakControl(long userid, short bOpen)
{
	static BYTE parms[] =
		VTS_I4 VTS_I2;
	InvokeHelper(0xd, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 userid, bOpen);
}

short CBRGameVideoClient::GetRoomUserCount()
{
	short result;
	InvokeHelper(0xe, DISPATCH_METHOD, VT_I2, (void*)&result, NULL);
	return result;
}

void CBRGameVideoClient::SetMessageNotifyHandle(long* phWnd)
{
	static BYTE parms[] =
		VTS_PI4;
	InvokeHelper(0xf, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 phWnd);
}

void CBRGameVideoClient::ShowUserPanel(long userid, short bShow, short left, short top, short right, short bottom)
{
	static BYTE parms[] =
		VTS_I4 VTS_I2 VTS_I2 VTS_I2 VTS_I2 VTS_I2;
	InvokeHelper(0x10, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 userid, bShow, left, top, right, bottom);
}

void CBRGameVideoClient::PrepaGetUserList()
{
	InvokeHelper(0x11, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

long CBRGameVideoClient::FetchNextUserID()
{
	long result;
	InvokeHelper(0x12, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

short CBRGameVideoClient::SetFortuneImage(LPCTSTR lpImageFile)
{
	short result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x13, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		lpImageFile);
	return result;
}

void CBRGameVideoClient::ResetFortuneMenu(long userid)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x14, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 userid);
}

void CBRGameVideoClient::AppendFortuneMenuItem(long userid, LPCTSTR menuText, LPCTSTR toolTip, short menuTag, short imageIndex)
{
	static BYTE parms[] =
		VTS_I4 VTS_BSTR VTS_BSTR VTS_I2 VTS_I2;
	InvokeHelper(0x15, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 userid, menuText, toolTip, menuTag, imageIndex);
}

void CBRGameVideoClient::SetSnapShotSavePath(LPCTSTR PathStr)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x16, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 PathStr);
}

void CBRGameVideoClient::ShowUserPanelEx(long userid, short bShow, short left, short top, short right, short bottom, short style, long* pParentWnd)
{
	static BYTE parms[] =
		VTS_I4 VTS_I2 VTS_I2 VTS_I2 VTS_I2 VTS_I2 VTS_I2 VTS_PI4;
	InvokeHelper(0x17, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 userid, bShow, left, top, right, bottom, style, pParentWnd);
}

void CBRGameVideoClient::SetRecordFileSavePath(LPCTSTR PathStr)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x18, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 PathStr);
}

short CBRGameVideoClient::SetVideoFrameStyle(long* lpStyle)
{
	short result;
	static BYTE parms[] =
		VTS_PI4;
	InvokeHelper(0x19, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		lpStyle);
	return result;
}

short CBRGameVideoClient::SetVideoToolBarStyle(long* lpStyle)
{
	short result;
	static BYTE parms[] =
		VTS_PI4;
	InvokeHelper(0x1a, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		lpStyle);
	return result;
}

void CBRGameVideoClient::SetUserPicture(long userid, LPCTSTR pathname)
{
	static BYTE parms[] =
		VTS_I4 VTS_BSTR;
	InvokeHelper(0x1b, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 userid, pathname);
}

void CBRGameVideoClient::SendTextMessage(long userid, long bSecret, LPCTSTR lpMsg, long msglen)
{
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_BSTR VTS_I4;
	InvokeHelper(0x1c, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 userid, bSecret, lpMsg, msglen);
}

CString CBRGameVideoClient::GetUserNameByUserID(long userid)
{
	CString result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x1d, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
		userid);
	return result;
}

long CBRGameVideoClient::IsInvisibleManager()
{
	long result;
	InvokeHelper(0x1e, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

void CBRGameVideoClient::ActiveCallLog(long bActive)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x1f, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 bActive);
}

void CBRGameVideoClient::CloseUserPanel(long userid)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x20, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 userid);
}

long CBRGameVideoClient::GetUserPanelState(long userid)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x21, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		userid);
	return result;
}

void CBRGameVideoClient::SetUserPanelTitle(long userid, LPCTSTR lpTitleStr)
{
	static BYTE parms[] =
		VTS_I4 VTS_BSTR;
	InvokeHelper(0x22, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 userid, lpTitleStr);
}

void CBRGameVideoClient::RefreshUserPanel(long userid)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x23, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 userid);
}

void CBRGameVideoClient::PrepaGetWaitQueueList()
{
	InvokeHelper(0x24, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

long CBRGameVideoClient::FetchNextWaitQueueUserID()
{
	long result;
	InvokeHelper(0x25, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

void CBRGameVideoClient::AnswerEnterRequest(long userid, long bAccept)
{
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0x26, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 userid, bAccept);
}

void CBRGameVideoClient::WhiteBoardOperateCtrl(long userid, long wbid, long optype, long* lpwbinfo)
{
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4 VTS_PI4;
	InvokeHelper(0x27, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 userid, wbid, optype, lpwbinfo);
}

void CBRGameVideoClient::WhiteBoardDrawData(long userid, long wbid, long drawtype, long* lpbuf, long nsize)
{
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4 VTS_PI4 VTS_I4;
	InvokeHelper(0x28, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 userid, wbid, drawtype, lpbuf, nsize);
}

void CBRGameVideoClient::SendTextMessageEx(long userid, long bSecret, long* lpMsgBuf, long bufLen)
{
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_PI4 VTS_I4;
	InvokeHelper(0x29, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 userid, bSecret, lpMsgBuf, bufLen);
}

void CBRGameVideoClient::TransBuffer(long userid, long* lpbuf, long nlen)
{
	static BYTE parms[] =
		VTS_I4 VTS_PI4 VTS_I4;
	InvokeHelper(0x2a, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 userid, lpbuf, nlen);
}

void CBRGameVideoClient::ShowSettingPanel()
{
	InvokeHelper(0x2b, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CBRGameVideoClient::ChangeChatMode(long chatmode)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x2c, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 chatmode);
}

long CBRGameVideoClient::PrivateChatRequest(long userid)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x2d, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		userid);
	return result;
}

long CBRGameVideoClient::PrivateChatEcho(long userid, long requestid, long bAccept)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0x2e, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		userid, requestid, bAccept);
	return result;
}

long CBRGameVideoClient::PrivateChatExit(long userid)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x2f, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		userid);
	return result;
}

long CBRGameVideoClient::GetUserChatMode(long userid)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x30, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		userid);
	return result;
}

void CBRGameVideoClient::ShowUserPanelEx2(long userid, short bShow, short left, short top, short right, short bottom, short style, long* pParentHandle)
{
	static BYTE parms[] =
		VTS_I4 VTS_I2 VTS_I2 VTS_I2 VTS_I2 VTS_I2 VTS_I2 VTS_PI4;
	InvokeHelper(0x31, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 userid, bShow, left, top, right, bottom, style, pParentHandle);
}

void CBRGameVideoClient::AboutBox()
{
	InvokeHelper(0xfffffdd8, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}
